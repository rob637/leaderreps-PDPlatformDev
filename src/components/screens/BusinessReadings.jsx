/* eslint-disable no-console */
import React, { useState, useMemo } from 'react';
import { useAppServices } from '../../App.jsx';
import { BookOpen, Target, CheckCircle, Clock } from 'lucide-react';
import { mdToHtml } from '../../utils/ApiHelpers.js'; // Assuming this helper exists

// --- MOCK BOOK DATA ---
// We need rich data to generate a good flyer, so we define a comprehensive mock structure.
const MOCK_ALL_BOOKS = {
    'Strategy & Execution': [
        { id: 's_e_1', title: 'The E-Myth Revisited', author: 'Michael E. Gerber', theme: 'Building systems, not just doing work.', complexity: 'Medium', duration: 180, focus: 'Delegation, Process Mapping', cover: 'https://placehold.co/100x150/002E47/ffffff?text=E+Myth', url: '#' },
        { id: 's_e_2', title: 'Good to Great', author: 'Jim Collins', theme: 'Disciplined people, disciplined thought, disciplined action.', complexity: 'High', duration: 240, focus: 'Level 5 Leadership, Hedgehog Concept', cover: 'https://placehold.co/100x150/47A88D/ffffff?text=Good+to+Great', url: '#' },
        { id: 's_e_3', title: 'Radical Focus', author: 'Christina Wodtke', theme: 'Setting and achieving goals using OKRs.', complexity: 'Medium', duration: 120, focus: 'Goal Setting, Quarterly Planning', cover: 'https://placehold.co/100x150/E04E1B/ffffff?text=Radical+Focus', url: '#' },
    ],
    'People & Culture': [
        { id: 'p_c_1', title: 'Dare to Lead', author: 'BrenÃ© Brown', theme: 'Courage, vulnerability, and trust in leadership.', complexity: 'Medium', duration: 210, focus: 'Psychological Safety, Feedback', cover: 'https://placehold.co/100x150/002E47/ffffff?text=Dare+to+Lead', url: '#' },
        { id: 'p_c_2', title: 'The Five Dysfunctions of a Team', author: 'Patrick Lencioni', theme: 'Overcoming common team pitfalls.', complexity: 'Low', duration: 150, focus: 'Team Building, Conflict Management', cover: 'https://placehold.co/100x150/47A88D/ffffff?text=Five+Dysfunctions', url: '#' },
    ],
    'Self-Awareness': [
        { id: 's_a_1', title: 'Atomic Habits', author: 'James Clear', theme: 'Small changes, remarkable results.', complexity: 'Low', duration: 180, focus: 'Habit Formation, Self-Discipline', cover: 'https://placehold.co/100x150/E04E1B/ffffff?text=Atomic+Habits', url: '#' },
        { id: 's_a_2', title: 'Crucial Conversations', author: 'Kerry Patterson', theme: 'How to handle high-stakes dialogue.', complexity: 'Medium', duration: 200, focus: 'Communication, Conflict Resolution', cover: 'https://placehold.co/100x150/002E47/ffffff?text=Crucial+Convo', url: '#' },
    ],
};

// --- HELPER: GENERATE BOOK FLYER CONTENT ---
const generateBookFlyerMarkdown = (book, tier) => {
    return `
# ${book.title}
## Key Insights for Leadership (${book.complexity} Complexity)

This reading is strategically aligned with the **${tier}** tier of your development plan, focusing specifically on **${book.focus}**. By mastering the principles in this book, you will significantly strengthen your ability to manage complex situations and drive organizational change.

---
### Why You Should Read It Now
**Theme:** ${book.theme}

**The Core Problem:** Many leaders fall into the trap of doing the work instead of building the systems that allow the work to scale. This book challenges the conventional view of management by framing the business as a systematic process, which is essential for true delegation and growth.

| Column 1: Actionable Takeaways | Column 2: Core Concepts | Column 3: Time Investment |
| :--- | :--- | :--- |
| **Commitment:** Translate three core concepts into daily behavioral goals. | **Concept 1:** Level 5 Leadership | **Duration:** Approx. ${book.duration} mins |
| **Practice:** Schedule a dedicated 30-minute block for distraction-free reading. | **Concept 2:** The Hedgehog Concept | **Focus Time:** Daily 15-min reading blocks. |
| **Review:** Prepare a 5-sentence summary for your next coaching session. | **Concept 3:** Flywheel Effect | **Next Step:** Convert to Commitment below. |
---
<p class="mt-4 text-sm text-gray-500 italic">This analysis was generated by the LeaderReps Coaching Engine to provide a quick-start guide for consumption.</p>
`;
};

// --- MAIN COMPONENT ---
export default function BusinessReadingsScreen() {
    const { allBooks: contextBooks = {}, updateCommitmentData, navigate } = useAppServices();
    const [selectedBook, setSelectedBook] = useState(null);
    const [htmlFlyer, setHtmlFlyer] = useState('');
    const [selectedTier, setSelectedTier] = useState('');

    // Safely use context books or fall back to mock data if context is empty
    const allBooks = Object.keys(contextBooks).length > 0 ? contextBooks : MOCK_ALL_BOOKS;

    // Trigger flyer generation when a book is selected
    useMemo(async () => {
        if (selectedBook) {
            const markdown = generateBookFlyerMarkdown(selectedBook, selectedTier);
            // Assuming mdToHtml is available via ApiHelpers.js
            setHtmlFlyer(await mdToHtml(markdown));
        } else {
            setHtmlFlyer('');
        }
    }, [selectedBook, selectedTier]);

    // Handler to create a new commitment from the selected book
    const handleCommitment = (book) => {
        const newCommitment = {
            id: book.id,
            title: `Read: ${book.title} (${book.author})`,
            category: 'Reading',
            tier: selectedTier,
            notes: `Flyer analysis: ${book.theme}. Est. ${book.duration} min.`,
            status: 'Active',
            createdAt: new Date().toISOString(),
        };

        const success = updateCommitmentData(newCommitment);

        if (success) {
            // Use local alert as a temporary replacement for custom modal
            alert(`"${book.title}" added to your Daily Practice commitments!`);
            navigate('daily-practice');
        } else {
            alert('Failed to add commitment. Check console for errors.');
        }
    };

    const BookList = () => (
        <div className="space-y-6">
            <h2 className="text-xl font-bold text-[#002E47] flex items-center gap-2">
                <BookOpen className="w-5 h-5 text-[#47A88D]" /> Curated Reading Library
            </h2>
            <div className="space-y-8">
                {Object.entries(allBooks).map(([tier, books]) => (
                    <div key={tier} className='border-l-4 border-[#002E47] pl-4'>
                        <h3 className="text-lg font-semibold text-gray-700 mb-4">{tier} ({books.length} Books)</h3>
                        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                            {(books || []).map((book) => (
                                <button
                                    key={book.id}
                                    onClick={() => {
                                        setSelectedBook(book);
                                        setSelectedTier(tier);
                                    }}
                                    className={`p-4 border rounded-xl shadow-sm text-left transition-all ${
                                        selectedBook?.id === book.id
                                            ? 'bg-[#47A88D]/20 border-[#47A88D] ring-2 ring-[#47A88D]'
                                            : 'bg-white hover:bg-gray-50'
                                    }`}
                                >
                                    <p className="font-bold text-[#002E47] truncate">{book.title}</p>
                                    <p className="text-sm text-gray-600 italic">by {book.author}</p>
                                    <div className="flex items-center text-xs text-gray-500 mt-2 gap-3">
                                        <div className='flex items-center'>
                                            <Clock className="w-3 h-3 mr-1" /> {book.duration} min
                                        </div>
                                        <div className='flex items-center'>
                                            <Target className="w-3 h-3 mr-1" /> {book.complexity}
                                        </div>
                                    </div>
                                </button>
                            ))}
                        </div>
                    </div>
                ))}
            </div>
        </div>
    );

    const BookFlyer = () => (
        <div className="space-y-6">
            <h2 className="text-xl font-bold text-[#002E47] flex items-center justify-between border-b pb-3">
                <span className='flex items-center gap-2'>
                    <CheckCircle className="w-5 h-5 text-[#47A88D]" /> Book Flyer: {selectedBook.title}
                </span>
                <button 
                    onClick={() => setSelectedBook(null)} 
                    className='text-sm font-medium text-[#E04E1B] hover:underline'
                >
                    &larr; Back to Library
                </button>
            </h2>

            <div className='bg-white rounded-xl shadow-lg p-6'>
                 <div 
                    className="prose prose-lg max-w-none space-y-4" 
                    dangerouslySetInnerHTML={{ __html: htmlFlyer }} 
                />
                
                <div className="mt-8 pt-6 border-t border-gray-200 flex justify-end">
                    <button 
                        onClick={() => handleCommitment(selectedBook)}
                        className="flex items-center gap-2 px-6 py-3 bg-[#E04E1B] text-white font-semibold rounded-xl hover:bg-red-700 transition-colors shadow-md"
                    >
                        <Target className="w-5 h-5" /> Add to Daily Practice
                    </button>
                </div>
            </div>
        </div>
    );

    return (
        <div className="p-6 md:p-8 min-h-screen bg-gray-100">
            <h1 className="text-3xl font-extrabold text-[#002E47] mb-8">Business Readings</h1>

            {!selectedBook && <BookList />}
            {selectedBook && <BookFlyer />}
        </div>
    );
}
